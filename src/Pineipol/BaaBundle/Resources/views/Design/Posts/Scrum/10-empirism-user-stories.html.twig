{% extends 'PineipolBaaBundle:Layout:home.html.twig' %}

{% block body %}
    <div id="post-container">
        <h1>El Product Backlog como clave del empirismo</h1>
        <div class="published-on">27 de julio de 2015</div>
        <div class="image-container">
            <img class="post-image" src="{{ asset('uploads/posts/150823_product_backlog/product_backlog.gif') }}">
            <div class="tags-container">
                <a href="">
                    <div class="one-tag-container">
                        <div class="yellow-tag">Agile</div>
                        <div class="tag-triangle"></div>
                    </div>
                </a>
                <a href="">
                    <div class="one-tag-container">
                        <div class="pink-tag">Architecture</div>
                        <div class="tag-triangle"></div>
                    </div>
                </a>
            </div>
        </div>
        <div class="content">
<p>
    <span style="font-size: 60px">E</span>n la sección de <a href="[[ROUTE:scrum-framework-one-]]" class="post-content-link">introducción</a> hemos hablado sobre cómo <span style="font-weight:bold">Scrum está basado en el empirismo</span> y sobre cómo la velocidad de trabajo de los Equipos de Desarrollo dota al proceso de Scrum de predictibilidad. Los elementos del Product Backlog cuentan con una propiedad imprescindible para conseguir este objetivo, las estimaciones.
</p>
<p>
    El <span style="font-weight:bold">Product Backlog debe contener todo aquello que sea necesario realizar para completar el proyecto</span>, es decir, funcionalidades, tareas, prototipos, pruebas, errores a corregir, etc. En la mayoría de los casos estos <span style="font-weight:bold">elementos son representados como historias de usuario</span>.
</p>
<div class="green_text_box">
    <div class="generic_icon"></div
    ><div class="generic_text_container">
        Las historias de usuario representan fragmentos de funcionalidad o comportamiento que se desea que posea un producto. El término fue introducido por Kent Beck como parte de la metodología Extreme Programming para desarrollar una forma de definición de requisitos informal que pudiera favorecer el entendimiento entre todo tipo de perfiles, ya fueran técnicos o no.
    </div>
</div>
<p>
    Las <span style="font-weight:bold">historias de usuario deben poder ser escritas en una tarjeta de papel</span> de tres pulgadas, es decir, deben contener una descripción mínima de la tarea que permita comprenderlas hasta el punto de poder priorizar entre ellas.
</p>
<p>
    Las características que describen a las buenas historias de usuario se resumen en el acrónimo INVEST:
</p>
<ul>
    <li>
        <p><span style="font-weight:bold">Independientes (independent).</span> Deben poder ser llevadas a cabo en cualquier orden.</p>
    </li>
    <li>
        <p><span style="font-weight:bold">Negociables (negotiable).</span> Su alcance puede ser negociado entre el cliente y el Equipo de Desarrollo antes de empezar a desarrollarlas.</p>
    </li>
    <li>
        <p><span style="font-weight:bold">Valorables (valuable).</span> Dan solución a un problema que aporta valor al cliente y a los usuarios finales del producto.</p>

    </li>
    <li>
        <p><span style="font-weight:bold">Estimables (estimable).</span> El equipo de desarrollo es capaz de estimar el esfuerzo necesario para completarlas.</p>
    </li>
    <li>
        <p><span style="font-weight:bold">Reducidas (small).</span> Deben estar lo suficientemente acotadas como para que se puedan llevar a cabo en el plazo de un Sprint.</p>
    </li>
    <li>
        <p><span style="font-weight:bold">Testables (testable).</span> Debería ser posible escribir tests de software que comprueben su correcto funcionamiento de forma automática.</p>
    </li>
</ul>
<p>
    Las historias de usuario se suelen <span style="font-weight:bold">expresar mediante la fórmula</span>:
</p>
<p>
    <span style="display:block;font-style:italic;text-align:center">“Yo como … quiero … que/para que … “</span>
</p>
<p>
    Por ejemplo:
</p>
<p>
    <span style="display:block;font-style:italic;text-align:center">Yo como usuario quiero que la aplicación tenga una opción exportar que me permita obtener los informes en csv.</span>
</p>
<p>
    La cláusula yo como representa quién necesita la historia o a quién aporta valor, quiero describe la funcionalidad deseada y que/para que describe por qué se quiere la funcionalidad o el valor aportado.
</p>
<p>
    Cabría pensar que el yo siempre representará al usuario final de la aplicación pero puede ser cualquier tipo de rol:
</p>
<p>
    <span style="display:block;font-style:italic;text-align:center">Yo como cliente quiero que los usuarios puedan acceder fácilmente a las web de otros productos míos para que se potencien las ventas cruzadas.</span>
</p>
<p>
    <span style="display:block;font-style:italic;text-align:center">Yo como desarrollador quiero que se despliegue un entorno web hotfix para que se puedan hacer correcciones rápidas sin que afecte a los usuarios finales.</span>
</p>
<p>
    Una vez que se tiene un <span style="font-weight:bold">Product Backlog repleto de historias de usuario correctamente definidas el Equipo de Desarrollo al completo las estima</span>, con la ayuda del Product Owner para explicar y resolver cualquier duda sobre el funcionamiento y alcance de las mismas.
</p>
<p>
    Las <span style="font-weight:bold">estimaciones se pueden hacer mediante horas de trabajo o mediante puntos de historia</span>.
</p>
<div class="green_text_box">
    <div class="generic_icon"></div
    ><div class="generic_text_container">
        Los <span style="font-weight:bold">puntos de historia</span> aportan mucha más información a las estimaciones pues <span style="font-weight:bold">representan el tiempo</span> que se puede tardar en completarlas, la <span style="font-weight:bold">complejidad</span> de las mismas, la <span style="font-weight:bold">incertidumbre</span> que encierran, etc lo que permite medir la productividad del equipo y su evolución a lo largo de los Sprints.
    </div>
</div>
<p>
    Las estimaciones mediante horas miden, única y exclusivamente, el tiempo que se les dedica. Hablaremos de los puntos de historia en futuros posts.
</p>
<p>
    La consecuencia de un Product Backlog dinámico, priorizado y rebosante de historias de usuario cuidadosamente estimadas, sumado a un Equipo de Desarrollo con varios Sprints a sus espaldas, es <span style="font-weight:bold">poder planificar los tiempos y costes del proyecto de manera precisa y empírica</span>.
</p>
<p>
    Así, si se sabe que nuestro equipo al completo desarrolla a una velocidad media de 15 puntos de historia por día y que nuestro cliente ha descrito un producto para el que se han extraído 89 historias de usuario las cuales, después de ser estimadas, suman un total de 1920 puntos de historia podemos afirmar de manera precisa y con autoridad que el proyecto se completará, inicialmente, en 128 días, es decir, unos seis meses.
</p>
<p>
    Este último párrafo concentra lo mejor de Scrum en una pocas líneas. Pensemos un poco en sus implicaciones.
</p>
<p>
    Sin Scrum, u otra disciplina ágil similar, la planificación de los proyectos se hacía en base al buen criterio de uno o más expertos, es decir, ¡a ojo de buen cubero! o, en el mejor de los casos, mediante diagramas de Gantt, los cuales resultan mucho más complejos de actualizar de forma frecuente para recoger los imprevistos que puedan surgir a lo largo de la ejecución del proyecto.
</p>
<p>
    Con Scrum nos estamos basando en una serie de requisitos debidamente especificados, en el criterio de todo un equipo a la hora de estimar punto por punto cada funcionalidad del producto y en una velocidad media de desarrollo calculada en base a ejercicios pasados y reales, es decir, no estimada sino medida.
</p>
<p>
    Pero aún hay más, esta <span style="font-weight:bold">estimación se actualiza cada Sprint</span>, es decir, cada no más de cuatro semanas, <span style="font-weight:bold">en base a la nueva velocidad media de desarrollo</span>, que suele aumentar a medida que el Equipo aprende más sobre el proyecto y las tecnologías empleadas, y en base también al <span style="font-weight:bold">nuevo conjunto de requisitos reflejado en el Product Backlog</span>. En las metodologías clásicas de desarrollo como el desarrollo en cascada la estimación no se actualiza con lo cual, cuando se detecta que el proyecto se está desviando de la planificación todo lo que se puede hacer es contratar a más personal, el cual resulta difícil formar a tiempo para que sea realmente útil, pedir horas extra al Equipo con la consecuente pérdida de motivación y, en consecuencia, productividad o disculparse y renegociar con el cliente.
</p>
<p>
    En un <span style="font-weight:bold">entorno de desarrollo empírico el riesgo del proyecto se actualiza cada pocas semanas</span> con lo que, si se presentan dificultades, se puede decidir entre ampliar el plazo de entrega o acotar el alcance del producto pues los objetivos de calidad deben permanecer intocables. Pero lo más importante es que nuestro <span style="font-weight:bold">cliente es consciente de la evolución del proyecto</span> y, en muchas ocasiones, de cómo sus frecuentes <span style="font-weight:bold">cambios de requisitos suponen un sobrecoste o un retraso</span> a la estimación inicial con lo que se lo puede pensar dos veces antes de solicitarlos.
</p>
<div class="key_points_text_box">
    <div class="title_box">
        <div class="generic_icon_container"></div>
        <div class="generic_title_container">Key Points</div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                Scrum está basado en el empirismo.
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                La velocidad de trabajo del Equipo de Desarrollo dota a Scrum de predictibilidad gracias a las estimaciones.
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                Los elementos del Product Backlog suelen ser representados como historias de usuario.
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                Las historias de usuario representan fragmentos de funcionalidad de forma que puedan favorecer el entendimiento entre perfiles técnicos y no técnicos.
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                Las historias de usuario deben poder ser escritas en una tarjeta de papel.
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                Las buenas historias de usuario cumplen con el acrónimo INVEST (independent, negotiable, valuable, estimable, small y testable).
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                Las historias de usuario se suelen expresar mediante la fórmula: "Yo como … quiero … que/para que … "
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                El Equipo de Desarrollo al completo estima las historias de usuario del Product Backlog. El Product Owner las explica y resuelve dudas.
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                Los puntos de historia aportan más información a las estimaciones que las horas pues representan tiempo, complejidad e incertidumbre.
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                Un Product Backlog lleno de historias de usuario debidamente estimadas es la clave para planificar el tiempo de desarrollo de un proyecto de forma precisa y empírica.
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                Las estimacionbes del Product Backlog se actualizan cada Sprint en base a la velocidad de desarrollo del equipo y a las nuevas tareas introducidas.
            </div>
        </div>
    </div>
    <div class="content_container">
        <div class="row_container">
            <div class="bullet"></div>
            <div class="text">
                En Scrum el riesgo del proyecto se actualiza cada pocas semanas, el cliente es consciente de la evolución del proyecto y de cómo los cambios de requisitos suponen un sobrecoste o un retraso a la estimación inicial.
            </div>
        </div>
    </div>
</div>
<div class="links-container">
    <div class="left-side-link-container">
        <a href="[[ROUTE:scrum-framework-nine-]]" class="post-content-link">< Artefactos de Scrum. Product Backlog</a>
    </div
    ><!--<div class="right-side-link-container">
        <a href="[[ROU__TE:scrum-framework-eleven-]]" class="post-content-link">Artefactos de Scrum. Gráfico Release Burndown ></a>
    </div>-->
</div>
<br>

        </div>
    </div>
{% endblock %}